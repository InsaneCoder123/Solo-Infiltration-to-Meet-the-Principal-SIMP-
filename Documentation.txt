Principal Possible Spawn Points
Principal Office (27, 2) ; Area (11, 1) to (44, 6)
Garden (67, 48) ; Area (62, 39) to (86, 52)
Faculty Office (155, 22) ; Area (138, 19) to (159, 28)


Guard Key Possible Spawn Points
(163, 47)
(92, 12)
(4, 51)

NPC Students Possible Spawn Point Area
Study Area - (4, 41) to (55, 51)
GYM - (90, 39) to (163, 47)
GLECROOM - (68, 12) to (94, 25)
LIBRARY - (21, 12) to (45, 25)

Principal Room Blockage
Principal Office - (25, 8) to (30, 8)
Garden - (71, 37) to (76, 37)
Faculty office - (142, 30) to (147, 30)




Map Elements

0000

Index 3
0 - Entrance
1 - Library
2 - Principal Office
3 - Study Area
4 - Garden
5 - Glec
6 - GYM
7 - Faculty Office
8 - Hallway
9 - NONE

Index 2
0 - Is not moveable
1 - Is moveable
2 - Is Hidden And Not Moveable

Index 1
0 - Wall
1 - Empty Space Inside the Map
2 - Empty Space Outside the Map
3 - _ Decoration
4 - / Decoration
5 - \ Decoration
6 - | Decoration
7 - - Decoration
8 - + Decoration
9 - = Decoration

Index 0
0
1 - Item
2 - Requirement Check
3
4
5 - Principal NPC
6 - Canteen Vendor NPC
7 - Entrance Guard NPC
8 - Guard NPC
9 - Student NPC



User Interface Elements 

00

'A': 1,
'B': 2,
'C': 3,
'D': 4,
'E': 5,
'F': 6,
'G': 7,
'H': 8,
'I': 9,
'J': 10,
'K': 11,
'L': 12,
'M': 13,
'N': 14,
'O': 15,
'P': 16,
'Q': 17,
'R': 18,
'S': 19,
'T': 20,
'U': 21,
'V': 22,
'W': 23,
'X': 24,
'Y': 25,
'Z': 26,
'-': 27,
':': 28,
' ': 29,
'0': 50,
'$': 51,
'&': 52,
'm': 53,
'p': 54,
'c': 55,
'n': 56,
's': 57,
'd': 58,
'l': 59

A-Z - Letter Rendering
'-' Inventory Slot
':' Colon
' ' Empty Space


Type of NPCs
Student NPC
Guard NPC
Entrance Guard NPC
Canteen Vendor NPC
Principal NPC - ID 20

Items
Guard Key - ID 1
BSCpE ID Sling - ID 2
Excel's Glue - ID 3
Wilfred's Stapler - ID 4
Trixie's Ballpen - ID 5
VJ's T-SQUARE - ID 6


Item Types
0 - Requirement
2 - Stat Modifer CHA
3 - Stat Modifier PHP



typedef struct {
	int requirementID; // The ID of the requirement, in case of an NPC having multiple requirements
	int type; // Type 1 - Item, Type 2 - PHP, Type 3 - CHA
	int itemID; // If -1, it is not needed
	int statRequired; // The corresponding amount of stat requirement for the particular stat requirement
} Requirement;

typedef struct {
	int id;
	int type;
	int quantity;
	int statModifier;
} Items;